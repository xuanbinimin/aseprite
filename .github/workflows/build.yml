name: build

on: [push, pull_request]

jobs:

  build:

    runs-on: ${{ matrix.os }}

    strategy:

      fail-fast: false

      matrix:

        os: [windows-latest]

        build_type: [Release]

        enable_ui: [on]

        include:

          - os: windows-latest

            build_type: Release

            enable_ui: on

    steps:

    - uses: actions/checkout@v3

      with:

        submodules: 'recursive'

    - name: ccache

      用途： hendrikmuhs/ccache-action@v1

      如果： runner.os == 'Linux'

      和：

        密钥： $ { { matrix.os } } -$ { { matrix.enable_ui } }

    -使用： seanmiddleditch/gha-setup-ninja@master

    -用途： ilammy/msvc-dev-cmd@v1

      如果： runner.os == 'Windows'

    -名称：安装依赖项

      外壳： bash

      运行：|

        如果 [[ “${{ runner.os }}” == “Linux” ]] ; 然后

          sudo apt-get 更新-qq

          sudo apt-get 安装 -y \

            libx11-dev libxcursor-dev libxi-dev

        菲

    -名称：生成Makefile

      外壳： bash

      运行：|

        如果 [[ “${{ runner.os }}” == “Windows” ]] ; 然后

          导出 enable_ccache=off

        别的

          导出 enable_ccache=on

        菲

        curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --输出 skia.zip

        7z x skia.zip

        cmake -S . -B 构建 -G Ninja \

          -DCMAKE_BUILD_TYPE=${{ 矩阵.build_type }} \

          -DENABLE_UI=${{ 矩阵.enable_ui }} \

          -DENABLE_CCACHE=$enable_ccache \

          -DLAF_BACKEND=skia \

          -DSKIA_DIR=./斯基亚\

          -DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \

          -DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib

    -名称：编译

      外壳： bash

      运行：|

        cd 构建&& 忍者

    -用途： actions/upload-artifact@v3

      和：

        名称: aseprite

        路径：|

          D:/a/aseprite/aseprite/build/bin/data

          D:/a/aseprite/aseprite/build/bin/aseprite.exe

作者：独立游戏杂货铺 https://www.bilibili.com/read/cv27083106/?spm_id_from=333.788.0.0 出处：bilibili
